/*
 * SPDX-FileCopyrightText: 2023-2023 Istituto Italiano di Tecnologia (IIT)
 * SPDX-License-Identifier: LGPL-2.1-or-later
 */


// Generated by yarpDeviceParamParserGenerator (1.0)
// This is an automatically generated file. Please do not edit it.
// It will be re-generated if the cmake flag ALLOW_DEVICE_PARAM_PARSER_GERNERATION is ON.

// Generated on: Sat Apr  6 12:45:14 2024


#ifndef FFMPEGGRABBER_PARAMSPARSER_H
#define FFMPEGGRABBER_PARAMSPARSER_H

#include <yarp/os/Searchable.h>
#include <yarp/dev/IDeviceDriverParams.h>
#include <string>
#include <cmath>

/**
* This class is the parameters parser for class FfmpegGrabber.
*
* These are the used parameters:
* | Group name | Parameter name | Type   | Units | Default Value | Required | Description                                                  | Notes |
* |:----------:|:--------------:|:------:|:-----:|:-------------:|:--------:|:------------------------------------------------------------:|:-----:|
* | -          | source         | string | -     | default.avi   | 0        | media file to read from                                      | -     |
* | -          | loop           | bool   | -     | true          | 0        | media should loop (default)                                  | -     |
* | -          | sync           | string | -     | image         | 0        | sync on image or audio (if have to choose)?                  | -     |
* | -          | nodelay        | bool   | -     | false         | 0        | media will play in simulated realtime unless this is present | -     |
* | -          | pace           | double | -     | 1.0           | 0        | simulated realtime multiplier factor (must be <1 right now)  | -     |
* | -          | v4l            | bool   | -     | false         | 0        | if present, read from video4linux                            | -     |
* | -          | v4l1           | bool   | -     | false         | 0        | if present, read from video4linux                            | -     |
* | -          | v4l2           | bool   | -     | false         | 0        | if present, read from video4linux                            | -     |
* | -          | ieee1394       | bool   | -     | false         | 0        | if present, read from firewire                               | -     |
* | -          | v4ldevice      | string | -     | /dev/video0   | 0        | device name                                                  | -     |
* | -          | audio          | string | -     | /dev/dsp      | 0        | optional audio device name                                   | -     |
* | -          | audio_rate     | int    | -     | 44100         | 0        | audio sample rate                                            | -     |
* | -          | channels       | int    | -     | 1             | 0        | number of channels                                           | -     |
* | -          | time_base_num  | int    | -     | 1             | 0        | numerator of basic time unit                                 | -     |
* | -          | time_base_den  | int    | -     | 29            | 0        | denominator of basic time unit                               | -     |
* | -          | channel        | int    | -     | 0             | 0        | channel identifier                                           | -     |
* | -          | standard       | string | -     | -             | 0        | pal versus ntsc                                              | -     |
* | -          | width          | int    | -     | 640           | 0        | width of image                                               | -     |
* | -          | height         | int    | -     | 480           | 0        | height of image                                              | -     |
* | -          | devname        | string | -     | /dev/dv1394   | 0        | firewire device name                                         | -     |
*
* The device can be launched by yarpdev using one of the following examples (with and without all optional parameters):
* \code{.unparsed}
* yarpdev --device ffmpeg_grabber --source default.avi --loop true --sync image --nodelay false --pace 1.0 --v4l false --v4l1 false --v4l2 false --ieee1394 false --v4ldevice /dev/video0 --audio /dev/dsp --audio_rate 44100 --channels 1 --time_base_num 1 --time_base_den 29 --channel 0 --standard <optional_value> --width 640 --height 480 --devname /dev/dv1394
* \endcode
*
* \code{.unparsed}
* yarpdev --device ffmpeg_grabber
* \endcode
*
*/

class FfmpegGrabber_ParamsParser : public yarp::dev::IDeviceDriverParams
{
public:
    FfmpegGrabber_ParamsParser();
    ~FfmpegGrabber_ParamsParser() override = default;

public:
    const std::string m_device_classname = {"FfmpegGrabber"};
    const std::string m_device_name = {"ffmpeg_grabber"};
    bool m_parser_is_strict = false;
    struct parser_version_type
    {
         int major = 1;
         int minor = 0;
    };
    const parser_version_type m_parser_version = {};

    const std::string m_source_defaultValue = {"default.avi"};
    const std::string m_loop_defaultValue = {"true"};
    const std::string m_sync_defaultValue = {"image"};
    const std::string m_nodelay_defaultValue = {"false"};
    const std::string m_pace_defaultValue = {"1.0"};
    const std::string m_v4l_defaultValue = {"false"};
    const std::string m_v4l1_defaultValue = {"false"};
    const std::string m_v4l2_defaultValue = {"false"};
    const std::string m_ieee1394_defaultValue = {"false"};
    const std::string m_v4ldevice_defaultValue = {"/dev/video0"};
    const std::string m_audio_defaultValue = {"/dev/dsp"};
    const std::string m_audio_rate_defaultValue = {"44100"};
    const std::string m_channels_defaultValue = {"1"};
    const std::string m_time_base_num_defaultValue = {"1"};
    const std::string m_time_base_den_defaultValue = {"29"};
    const std::string m_channel_defaultValue = {"0"};
    const std::string m_standard_defaultValue = {""};
    const std::string m_width_defaultValue = {"640"};
    const std::string m_height_defaultValue = {"480"};
    const std::string m_devname_defaultValue = {"/dev/dv1394"};

    std::string m_source = {"default.avi"};
    bool m_loop = {true};
    std::string m_sync = {"image"};
    bool m_nodelay = {false};
    double m_pace = {1.0};
    bool m_v4l = {false};
    bool m_v4l1 = {false};
    bool m_v4l2 = {false};
    bool m_ieee1394 = {false};
    std::string m_v4ldevice = {"/dev/video0"};
    std::string m_audio = {"/dev/dsp"};
    int m_audio_rate = {44100};
    int m_channels = {1};
    int m_time_base_num = {1};
    int m_time_base_den = {29};
    int m_channel = {0};
    std::string m_standard = {}; //This default value of this string is an empty string. It is highly recommended to provide a suggested value also for optional string parameters.
    int m_width = {640};
    int m_height = {480};
    std::string m_devname = {"/dev/dv1394"};

    bool          parseParams(const yarp::os::Searchable & config) override;
    std::string   getDeviceClassName() const override { return m_device_classname; }
    std::string   getDeviceName() const override { return m_device_name; }
    std::string   getDocumentationOfDeviceParams() const override;
    std::vector<std::string> getListOfParams() const override;
};

#endif
