/*
 * SPDX-FileCopyrightText: 2023-2023 Istituto Italiano di Tecnologia (IIT)
 * SPDX-License-Identifier: LGPL-2.1-or-later
 */


// Generated by yarpDeviceParamParserGenerator (1.0)
// This is an automatically generated file. Please do not edit it.
// It will be re-generated if the cmake flag ALLOW_DEVICE_PARAM_PARSER_GERNERATION is ON.

// Generated on: Fri Apr  5 16:06:46 2024


#ifndef FRAMEGRABBERCROPPER_PARAMSPARSER_H
#define FRAMEGRABBERCROPPER_PARAMSPARSER_H

#include <yarp/os/Searchable.h>
#include <yarp/dev/IDeviceDriverParams.h>
#include <string>
#include <cmath>

/**
* This class is the parameters parser for class FrameGrabberCropper.
*
* These are the used parameters:
* | Group name | Parameter name         | Type | Units | Default Value | Required | Description                                                   | Notes |
* |:----------:|:----------------------:|:----:|:-----:|:-------------:|:--------:|:-------------------------------------------------------------:|:-----:|
* | -          | x1                     | int  | -     | 0             | 1        | x1                                                            | -     |
* | -          | y1                     | int  | -     | 0             | 1        | y1                                                            | -     |
* | -          | x2                     | int  | -     | 100           | 1        | x2                                                            | -     |
* | -          | y2                     | int  | -     | 100           | 1        | y2                                                            | -     |
* | -          | forwardRgbVisualParams | bool | -     | false         | 0        | Forward the the IRgbVisualParams calls to the attached device | -     |
*
* The device can be launched by yarpdev using one of the following examples (with and without all optional parameters):
* \code{.unparsed}
* yarpdev --device frameGrabberCropper --x1 0 --y1 0 --x2 100 --y2 100 --forwardRgbVisualParams false
* \endcode
*
* \code{.unparsed}
* yarpdev --device frameGrabberCropper --x1 0 --y1 0 --x2 100 --y2 100
* \endcode
*
*/

class FrameGrabberCropper_ParamsParser : public yarp::dev::IDeviceDriverParams
{
public:
    FrameGrabberCropper_ParamsParser();
    ~FrameGrabberCropper_ParamsParser() override = default;

public:
    const std::string m_device_classname = {"FrameGrabberCropper"};
    const std::string m_device_name = {"frameGrabberCropper"};
    bool m_parser_is_strict = false;
    struct parser_version_type
    {
         int major = 1;
         int minor = 0;
    };
    const parser_version_type m_parser_version = {};

    const std::string m_x1_defaultValue = {"0"};
    const std::string m_y1_defaultValue = {"0"};
    const std::string m_x2_defaultValue = {"100"};
    const std::string m_y2_defaultValue = {"100"};
    const std::string m_forwardRgbVisualParams_defaultValue = {"false"};

    int m_x1 = {0};
    int m_y1 = {0};
    int m_x2 = {100};
    int m_y2 = {100};
    bool m_forwardRgbVisualParams = {false};

    bool          parseParams(const yarp::os::Searchable & config) override;
    std::string   getDeviceClassName() const override { return m_device_classname; }
    std::string   getDeviceName() const override { return m_device_name; }
    std::string   getDocumentationOfDeviceParams() const override;
    std::vector<std::string> getListOfParams() const override;
};

#endif
