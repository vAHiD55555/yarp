/*
 * SPDX-FileCopyrightText: 2023-2023 Istituto Italiano di Tecnologia (IIT)
 * SPDX-License-Identifier: LGPL-2.1-or-later
 */


// Generated by yarpDeviceParamParserGenerator (1.0)
// This is an automatically generated file. Please do not edit it.
// It will be re-generated if the cmake flag ALLOW_DEVICE_PARAM_PARSER_GERNERATION is ON.

// Generated on: Sat Apr  6 12:05:03 2024


#ifndef FRAMETRANSFORMCLIENT_PARAMSPARSER_H
#define FRAMETRANSFORMCLIENT_PARAMSPARSER_H

#include <yarp/os/Searchable.h>
#include <yarp/dev/IDeviceDriverParams.h>
#include <string>
#include <cmath>

/**
* This class is the parameters parser for class FrameTransformClient.
*
* These are the used parameters:
* | Group name | Parameter name               | Type   | Units | Default Value      | Required | Description                                                                                                            | Notes                                                               |
* |:----------:|:----------------------------:|:------:|:-----:|:------------------:|:--------:|:----------------------------------------------------------------------------------------------------------------------:|:-------------------------------------------------------------------:|
* | -          | testxml_from                 | string | -     | -                  | 0        | xml configuration file name                                                                                            | NB: FOR TEST ONLY.                                                  |
* | -          | testxml_context              | string | -     | -                  | 0        | xml configuration file context                                                                                         | NB: FOR TEST ONLY.                                                  |
* | -          | filexml_option               | string | -     | ftc_local_only.xml | 0        | The name of the xml file containing the needed client configuration. if used, the name will be appended to config_xml/ | it is mutually exclusive with testxml_from, testxml_context options |
* | -          | local_rpc                    | string | -     | /ftClient/rpc      | 0        | Full name of the client rpc port                                                                                       | -                                                                   |
* | -          | FrameTransform_verbose_debug | bool   | -     | false              | 0        | Enable debug prints                                                                                                    | -                                                                   |
* | -          | period                       | double | s     | 0.10               | 0        | thread period                                                                                                          | -                                                                   |
*
* The device can be launched by yarpdev using one of the following examples (with and without all optional parameters):
* \code{.unparsed}
* yarpdev --device frameTransformClient --testxml_from <optional_value> --testxml_context <optional_value> --filexml_option ftc_local_only.xml --local_rpc /ftClient/rpc --FrameTransform_verbose_debug false --period 0.10
* \endcode
*
* \code{.unparsed}
* yarpdev --device frameTransformClient
* \endcode
*
*/

class FrameTransformClient_ParamsParser : public yarp::dev::IDeviceDriverParams
{
public:
    FrameTransformClient_ParamsParser();
    ~FrameTransformClient_ParamsParser() override = default;

public:
    const std::string m_device_classname = {"FrameTransformClient"};
    const std::string m_device_name = {"frameTransformClient"};
    bool m_parser_is_strict = false;
    struct parser_version_type
    {
         int major = 1;
         int minor = 0;
    };
    const parser_version_type m_parser_version = {};

    const std::string m_testxml_from_defaultValue = {""};
    const std::string m_testxml_context_defaultValue = {""};
    const std::string m_filexml_option_defaultValue = {"ftc_local_only.xml"};
    const std::string m_local_rpc_defaultValue = {"/ftClient/rpc"};
    const std::string m_FrameTransform_verbose_debug_defaultValue = {"false"};
    const std::string m_period_defaultValue = {"0.10"};

    std::string m_testxml_from = {}; //This default value of this string is an empty string. It is highly recommended to provide a suggested value also for optional string parameters.
    std::string m_testxml_context = {}; //This default value of this string is an empty string. It is highly recommended to provide a suggested value also for optional string parameters.
    std::string m_filexml_option = {"ftc_local_only.xml"};
    std::string m_local_rpc = {"/ftClient/rpc"};
    bool m_FrameTransform_verbose_debug = {false};
    double m_period = {0.10};

    bool          parseParams(const yarp::os::Searchable & config) override;
    std::string   getDeviceClassName() const override { return m_device_classname; }
    std::string   getDeviceName() const override { return m_device_name; }
    std::string   getDocumentationOfDeviceParams() const override;
    std::vector<std::string> getListOfParams() const override;
};

#endif
