/*
 * SPDX-FileCopyrightText: 2023-2023 Istituto Italiano di Tecnologia (IIT)
 * SPDX-License-Identifier: LGPL-2.1-or-later
 */


// Generated by yarpDeviceParamParserGenerator (1.0)
// This is an automatically generated file. Please do not edit it.
// It will be re-generated if the cmake flag ALLOW_DEVICE_PARAM_PARSER_GERNERATION is ON.

// Generated on: Thu Mar  7 17:59:44 2024


#ifndef BATTERY_NWS_YARP_PARAMSPARSER_H
#define BATTERY_NWS_YARP_PARAMSPARSER_H

#include <yarp/os/Searchable.h>
#include <yarp/dev/IDeviceDriverParams.h>
#include <string>
#include <cmath>

/**
* This class is the parameters parser for class Battery_nws_yarp.
*
* These are the used parameters:
* | Group name | Parameter name  | Type   | Units | Default Value       | Required | Description                                                                                       | Notes                                                                                                   |
* |:----------:|:---------------:|:------:|:-----:|:-------------------:|:--------:|:-------------------------------------------------------------------------------------------------:|:-------------------------------------------------------------------------------------------------------:|
* | -          | name            | string | -     | /robotName/battery1 | 1        | prefix of the ports opened by the device                                                          | MUST start with a '/' character. /data:o and /rpc:i is automatically appended by the wrapper at the end |
* | -          | period          | double | s     | 1.0                 | 0        | refresh period of the broadcasted values in seconds                                               | optional, default 1.0s                                                                                  |
* | -          | enable_shutdown | bool   | -     | false               | 0        | if enabled, batteryWrapper will start a system shutdown when charge is below 5%                   | -                                                                                                       |
* | -          | enable_log      | bool   | -     | false               | 0        | if enabled, stores a log of battery usage on disk                                                 | data stored on file batteryLog.txt                                                                      |
* | -          | quitPortName    | string | -     | -                   | 0        | if present, this yarp port will be opened and used to send a sthutdown command to other processes | enable_shutdown must be enabled                                                                         |
*
* The device can be launched by yarpdev using one of the following examples (with and without all optional parameters):
* \code{.unparsed}
* yarpdev --device battery_nws_yarp --name /robotName/battery1 --period 1.0 --enable_shutdown false --enable_log false --quitPortName <optional_value>
* \endcode
*
* \code{.unparsed}
* yarpdev --device battery_nws_yarp --name /robotName/battery1
* \endcode
*
*/

class Battery_nws_yarp_ParamsParser : public yarp::dev::IDeviceDriverParams
{
public:
    Battery_nws_yarp_ParamsParser();
    ~Battery_nws_yarp_ParamsParser() override = default;

public:
    const std::string m_device_classname = {"Battery_nws_yarp"};
    const std::string m_device_name = {"battery_nws_yarp"};
    bool m_parser_is_strict = false;
    struct parser_version_type
    {
         int major = 1;
         int minor = 0;
    };
    const parser_version_type m_parser_version = {};

    const std::string m_name_defaultValue = {"/robotName/battery1"};
    const std::string m_period_defaultValue = {"1.0"};
    const std::string m_enable_shutdown_defaultValue = {"false"};
    const std::string m_enable_log_defaultValue = {"false"};
    const std::string m_quitPortName_defaultValue = {""};

    std::string m_name = {"/robotName/battery1"};
    double m_period = {1.0};
    bool m_enable_shutdown = {false};
    bool m_enable_log = {false};
    std::string m_quitPortName = {}; //This default value of this string is an empty string. It is highly recommended to provide a suggested value also for optional string parameters.

    bool          parseParams(const yarp::os::Searchable & config) override;
    std::string   getDeviceClassName() const override { return m_device_classname; }
    std::string   getDeviceName() const override { return m_device_name; }
    std::string   getDocumentationOfDeviceParams() const override;
    std::vector<std::string> getListOfParams() const override;
};

#endif
