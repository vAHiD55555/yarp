/*
 * SPDX-FileCopyrightText: 2006-2021 Istituto Italiano di Tecnologia (IIT)
 * SPDX-License-Identifier: BSD-3-Clause
 */

// Autogenerated by Thrift Compiler (0.14.1-yarped)
//
// This is an automatically generated file.
// It could get re-generated if the ALLOW_IDL_GENERATION flag is on.

#ifndef YARP_THRIFT_GENERATOR_SERVICE_IRANGEFINDER2DMSGS_H
#define YARP_THRIFT_GENERATOR_SERVICE_IRANGEFINDER2DMSGS_H

#include <yarp/os/Wire.h>
#include <yarp/os/idl/WireTypes.h>
#include <return_getDeviceInfo.h>
#include <return_getDeviceStatus.h>
#include <return_getDistanceRange.h>
#include <return_getHorizontalResolution.h>
#include <return_getScanLimits.h>
#include <return_getScanRate.h>

class IRangefinder2DMsgs :
        public yarp::os::Wire
{
public:
    // Constructor
    IRangefinder2DMsgs();

    virtual return_getDeviceStatus getDeviceStatus_RPC();

    virtual return_getDistanceRange getDistanceRange_RPC();

    virtual return_getScanLimits getScanLimits_RPC();

    virtual return_getHorizontalResolution getHorizontalResolution_RPC();

    virtual return_getScanRate getScanRate_RPC();

    virtual return_getDeviceInfo getDeviceInfo_RPC();

    virtual bool setDistanceRange_RPC(const double min, const double max);

    virtual bool setScanLimits_RPC(const double min, const double max);

    virtual bool setHorizontalResolution_RPC(const double step);

    virtual bool setScanRate_RPC(const double rate);

    // help method
    virtual std::vector<std::string> help(const std::string& functionName = "--all");

    // read from ConnectionReader
    bool read(yarp::os::ConnectionReader& connection) override;
};

#endif // YARP_THRIFT_GENERATOR_SERVICE_IRANGEFINDER2DMSGS_H
