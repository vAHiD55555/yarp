/*
 * SPDX-FileCopyrightText: 2006-2021 Istituto Italiano di Tecnologia (IIT)
 * SPDX-License-Identifier: BSD-3-Clause
 */

// Autogenerated by Thrift Compiler (0.14.1-yarped)
//
// This is an automatically generated file.
// It could get re-generated if the ALLOW_IDL_GENERATION flag is on.

#include <SensorMetadata.h>

// Constructor with field values
SensorMetadata::SensorMetadata(const std::string& name,
                               const std::string& frameName,
                               const std::string& additionalMetadata) :
        WirePortable(),
        name(name),
        frameName(frameName),
        additionalMetadata(additionalMetadata)
{
}

// Read structure on a Wire
bool SensorMetadata::read(yarp::os::idl::WireReader& reader)
{
    if (!read_name(reader)) {
        return false;
    }
    if (!read_frameName(reader)) {
        return false;
    }
    if (!read_additionalMetadata(reader)) {
        return false;
    }
    if (reader.isError()) {
        return false;
    }
    return true;
}

// Read structure on a Connection
bool SensorMetadata::read(yarp::os::ConnectionReader& connection)
{
    yarp::os::idl::WireReader reader(connection);
    if (!reader.readListHeader(3)) {
        return false;
    }
    if (!read(reader)) {
        return false;
    }
    return true;
}

// Write structure on a Wire
bool SensorMetadata::write(const yarp::os::idl::WireWriter& writer) const
{
    if (!write_name(writer)) {
        return false;
    }
    if (!write_frameName(writer)) {
        return false;
    }
    if (!write_additionalMetadata(writer)) {
        return false;
    }
    if (writer.isError()) {
        return false;
    }
    return true;
}

// Write structure on a Connection
bool SensorMetadata::write(yarp::os::ConnectionWriter& connection) const
{
    yarp::os::idl::WireWriter writer(connection);
    if (!writer.writeListHeader(3)) {
        return false;
    }
    if (!write(writer)) {
        return false;
    }
    return true;
}

// Convert to a printable string
std::string SensorMetadata::toString() const
{
    yarp::os::Bottle b;
    if (!yarp::os::Portable::copyPortable(*this, b)) {
        return {};
    }
    return b.toString();
}

// read name field
bool SensorMetadata::read_name(yarp::os::idl::WireReader& reader)
{
    if (reader.noMore()) {
        reader.fail();
        return false;
    }
    if (!reader.readString(name)) {
        reader.fail();
        return false;
    }
    return true;
}

// write name field
bool SensorMetadata::write_name(const yarp::os::idl::WireWriter& writer) const
{
    if (!writer.writeString(name)) {
        return false;
    }
    return true;
}

// read (nested) name field
bool SensorMetadata::nested_read_name(yarp::os::idl::WireReader& reader)
{
    if (reader.noMore()) {
        reader.fail();
        return false;
    }
    if (!reader.readString(name)) {
        reader.fail();
        return false;
    }
    return true;
}

// write (nested) name field
bool SensorMetadata::nested_write_name(const yarp::os::idl::WireWriter& writer) const
{
    if (!writer.writeString(name)) {
        return false;
    }
    return true;
}

// read frameName field
bool SensorMetadata::read_frameName(yarp::os::idl::WireReader& reader)
{
    if (reader.noMore()) {
        reader.fail();
        return false;
    }
    if (!reader.readString(frameName)) {
        reader.fail();
        return false;
    }
    return true;
}

// write frameName field
bool SensorMetadata::write_frameName(const yarp::os::idl::WireWriter& writer) const
{
    if (!writer.writeString(frameName)) {
        return false;
    }
    return true;
}

// read (nested) frameName field
bool SensorMetadata::nested_read_frameName(yarp::os::idl::WireReader& reader)
{
    if (reader.noMore()) {
        reader.fail();
        return false;
    }
    if (!reader.readString(frameName)) {
        reader.fail();
        return false;
    }
    return true;
}

// write (nested) frameName field
bool SensorMetadata::nested_write_frameName(const yarp::os::idl::WireWriter& writer) const
{
    if (!writer.writeString(frameName)) {
        return false;
    }
    return true;
}

// read additionalMetadata field
bool SensorMetadata::read_additionalMetadata(yarp::os::idl::WireReader& reader)
{
    if (reader.noMore()) {
        reader.fail();
        return false;
    }
    if (!reader.readString(additionalMetadata)) {
        reader.fail();
        return false;
    }
    return true;
}

// write additionalMetadata field
bool SensorMetadata::write_additionalMetadata(const yarp::os::idl::WireWriter& writer) const
{
    if (!writer.writeString(additionalMetadata)) {
        return false;
    }
    return true;
}

// read (nested) additionalMetadata field
bool SensorMetadata::nested_read_additionalMetadata(yarp::os::idl::WireReader& reader)
{
    if (reader.noMore()) {
        reader.fail();
        return false;
    }
    if (!reader.readString(additionalMetadata)) {
        reader.fail();
        return false;
    }
    return true;
}

// write (nested) additionalMetadata field
bool SensorMetadata::nested_write_additionalMetadata(const yarp::os::idl::WireWriter& writer) const
{
    if (!writer.writeString(additionalMetadata)) {
        return false;
    }
    return true;
}
