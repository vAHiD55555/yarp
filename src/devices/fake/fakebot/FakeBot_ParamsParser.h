/*
 * SPDX-FileCopyrightText: 2023-2023 Istituto Italiano di Tecnologia (IIT)
 * SPDX-License-Identifier: LGPL-2.1-or-later
 */


// Generated by yarpDeviceParamParserGenerator (1.0)
// This is an automatically generated file. Please do not edit it.
// It will be re-generated if the cmake flag ALLOW_DEVICE_PARAM_PARSER_GERNERATION is ON.

// Generated on: Thu Mar  7 17:59:40 2024


#ifndef FAKEBOT_PARAMSPARSER_H
#define FAKEBOT_PARAMSPARSER_H

#include <yarp/os/Searchable.h>
#include <yarp/dev/IDeviceDriverParams.h>
#include <string>
#include <cmath>

/**
* This class is the parameters parser for class FakeBot.
*
* These are the used parameters:
* | Group name | Parameter name | Type   | Units | Default Value     | Required | Description                                 | Notes |
* |:----------:|:--------------:|:------:|:-----:|:-----------------:|:--------:|:-------------------------------------------:|:-----:|
* | -          | background     | string | -     | textures/back.ppm | 0        | background image to use                     | -     |
* | -          | target         | string | -     | textures/fore.ppm | 0        | target image to use                         | -     |
* | -          | noise          | double | -     | 0.05              | 0        | pixel noise level                           | -     |
* | -          | sx             | double | -     | 1.0               | 0        | scaling for x coordinate                    | -     |
* | -          | sy             | double | -     | 1.0               | 0        | scaling for y coordinate                    | -     |
* | -          | lifetime       | double | s     | -1.0              | 0        | device should exist for this length of time | -     |
*
* The device can be launched by yarpdev using one of the following examples (with and without all optional parameters):
* \code{.unparsed}
* yarpdev --device fakebot --background textures/back.ppm --target textures/fore.ppm --noise 0.05 --sx 1.0 --sy 1.0 --lifetime -1.0
* \endcode
*
* \code{.unparsed}
* yarpdev --device fakebot
* \endcode
*
*/

class FakeBot_ParamsParser : public yarp::dev::IDeviceDriverParams
{
public:
    FakeBot_ParamsParser();
    ~FakeBot_ParamsParser() override = default;

public:
    const std::string m_device_classname = {"FakeBot"};
    const std::string m_device_name = {"fakebot"};
    bool m_parser_is_strict = false;
    struct parser_version_type
    {
         int major = 1;
         int minor = 0;
    };
    const parser_version_type m_parser_version = {};

    const std::string m_background_defaultValue = {"textures/back.ppm"};
    const std::string m_target_defaultValue = {"textures/fore.ppm"};
    const std::string m_noise_defaultValue = {"0.05"};
    const std::string m_sx_defaultValue = {"1.0"};
    const std::string m_sy_defaultValue = {"1.0"};
    const std::string m_lifetime_defaultValue = {"-1.0"};

    std::string m_background = {"textures/back.ppm"};
    std::string m_target = {"textures/fore.ppm"};
    double m_noise = {0.05};
    double m_sx = {1.0};
    double m_sy = {1.0};
    double m_lifetime = {-1.0};

    bool          parseParams(const yarp::os::Searchable & config) override;
    std::string   getDeviceClassName() const override { return m_device_classname; }
    std::string   getDeviceName() const override { return m_device_name; }
    std::string   getDocumentationOfDeviceParams() const override;
    std::vector<std::string> getListOfParams() const override;
};

#endif
