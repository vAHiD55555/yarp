/*
 * SPDX-FileCopyrightText: 2023-2023 Istituto Italiano di Tecnologia (IIT)
 * SPDX-License-Identifier: LGPL-2.1-or-later
 */


// Generated by yarpDeviceParamParserGenerator (1.0)
// This is an automatically generated file. Please do not edit it.
// It will be re-generated if the cmake flag ALLOW_DEVICE_PARAM_PARSER_GERNERATION is ON.

// Generated on: Thu Mar  7 17:59:42 2024


#ifndef FAKEMICROPHONE_PARAMSPARSER_H
#define FAKEMICROPHONE_PARAMSPARSER_H

#include <yarp/os/Searchable.h>
#include <yarp/dev/IDeviceDriverParams.h>
#include <string>
#include <cmath>

/**
* This class is the parameters parser for class FakeMicrophone.
*
* These are the used parameters:
* | Group name | Parameter name    | Type   | Units   | Default Value | Required | Description                                                                                   | Notes                                               |
* |:----------:|:-----------------:|:------:|:-------:|:-------------:|:--------:|:---------------------------------------------------------------------------------------------:|:---------------------------------------------------:|
* | -          | period            | double | s       | 0.010         | 0        | the period of processing thread                                                               | A value of 10ms is recommended. Do to not modify it |
* | -          | waveform          | string | -       | sine          | 0        | Defines the shape of the waveform. Can be one of the following: sine,sawtooth,square,constant | -                                                   |
* | -          | signal_frequency  | int    | Hz      | 440           | 0        | Frequency of the generated signal                                                             | -                                                   |
* | -          | signal_amplitude  | int    | -       | 32000         | 0        | Amplitude of the generated signal                                                             | -                                                   |
* | -          | driver_frame_size | int    | samples | 512           | 0        | the number of samples to process on each iteration of the thread                              | -                                                   |
*
* The device can be launched by yarpdev using one of the following examples (with and without all optional parameters):
* \code{.unparsed}
* yarpdev --device fakeMicrophone --period 0.010 --waveform sine --signal_frequency 440 --signal_amplitude 32000 --driver_frame_size 512
* \endcode
*
* \code{.unparsed}
* yarpdev --device fakeMicrophone
* \endcode
*
*/

class FakeMicrophone_ParamsParser : public yarp::dev::IDeviceDriverParams
{
public:
    FakeMicrophone_ParamsParser();
    ~FakeMicrophone_ParamsParser() override = default;

public:
    const std::string m_device_classname = {"FakeMicrophone"};
    const std::string m_device_name = {"fakeMicrophone"};
    bool m_parser_is_strict = false;
    struct parser_version_type
    {
         int major = 1;
         int minor = 0;
    };
    const parser_version_type m_parser_version = {};

    const std::string m_period_defaultValue = {"0.010"};
    const std::string m_waveform_defaultValue = {"sine"};
    const std::string m_signal_frequency_defaultValue = {"440"};
    const std::string m_signal_amplitude_defaultValue = {"32000"};
    const std::string m_driver_frame_size_defaultValue = {"512"};

    double m_period = {0.010};
    std::string m_waveform = {"sine"};
    int m_signal_frequency = {440};
    int m_signal_amplitude = {32000};
    int m_driver_frame_size = {512};

    bool          parseParams(const yarp::os::Searchable & config) override;
    std::string   getDeviceClassName() const override { return m_device_classname; }
    std::string   getDeviceName() const override { return m_device_name; }
    std::string   getDocumentationOfDeviceParams() const override;
    std::vector<std::string> getListOfParams() const override;
};

#endif
